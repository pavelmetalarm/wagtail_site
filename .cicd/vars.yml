---
# basic user configuration
app_user_name: "devopspro24"

app_user_keys:
  - "https://github.com/jtprog.keys"
  - "https://github.com/pavelmetalarm.keys"
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGiAIAD5aaBpMZfZDmw2Stawb5lx16yySzfz8R64UmINbL/keakxVQHIoYm2CU8PL3kmvufmSOMoZ6vQYtur9eB4JEhlZTuVUw5UTzqkNyYvy6f64sghdy6cyYaKmF9g/Ub7ZYaLynETk4oulyyUqFOGDpsKNq3zQJfNq6CEknv//BGgDWvowozxhHWLge7X9EICNXBPyqlba8+bq3D4I4tYwSNqDB3+5XPFtMaO0ygfngVUTGrh2P7FATAD+fgw02o5bSakCvLLwwQtveK+Aall19nYklUNr8/lvYBE3/jLjtPpF1Tw8JvPu1h4wYm5ymEUo0DKpOjVAMSuOSloRN github_actions"

app_user_group: "admins"
app_user_bash_profile_content: "bash_profile"
app_user_vimrc: "vimrc"

# configure deploy
deploy_src_repo_url: "https://github.com/pavelmetalarm/wagtail_site.git"
deploy_src_repo_dest: "/home/{{ app_user_name }}/app"
deploy_src_work_dir: "{{ deploy_src_repo_dest }}/src"
deploy_repository_branche_name: "master"

# configure and run application
run_site_domain: "devopspro24.com"
run_site_host: "127.0.0.1"
run_site_port: 8000
run_site_gunicorn_dest: "{{ deploy_src_repo_dest }}/gunicorn.py"
run_site_pid: "/var/tmp/{{ run_site_domain }}.pid"
run_site_nginx_default: "/etc/nginx/conf.d/default.conf"
run_site_systemd_unit: "/etc/systemd/system/{{ run_site_domain }}.service"
run_site_nginx_access_log: "/var/log/nginx/{{ run_site_domain }}.access.log"
run_site_nginx_error_log: "/var/log/nginx/{{ run_site_domain }}.error.log"
run_site_django_debug_mode: "False"

run_site_nginx_upstream_name: "python-backend"
run_site_allowed_hosts:
  - "127.0.0.1"
  - "{{ run_site_host }}:{{ run_site_port }}"
  - "{{ run_site_domain }}"
  - "www.{{ run_site_domain }}"
  - "{{ run_site_nginx_upstream_name }}"

run_site_nginx_ssl: true

# letsencrypt
certbot_auto_renew_user: "root"
certbot_auto_renew_minute: "20"
certbot_auto_renew_hour: "5"
certbot_auto_renew: true
certbot_auto_renew_options: "--quiet --no-self-upgrade"

certbot_admin_email: "admin@{{ run_site_domain }}"
certbot_create_if_missing: true
certbot_create_standalone_stop_services: []
certbot_certs:
  - domains:
      - "{{ run_site_domain }}"
      - "www.{{ run_site_domain }}"



#
# https://acme-staging.api.letsencrypt.org/director
#
# nginx_vhosts:
#   - listen: "443 ssl http2"
#     server_name: "{{ run_site_domain }}"
#     root: "/usr/share/nginx/html"
#     index: "index.html index.htm"
#     state: "present"
#     template: "{{ nginx_vhost_template }}"
#     filename: "certbot_test.conf"
#     extra_parameters: |
#       ssl_certificate     /etc/letsencrypt/live/{{ run_site_domain }}/fullchain.pem;
#       ssl_certificate_key /etc/letsencrypt/live/{{ run_site_domain }}/privkey.pem;
#       ssl_protocols       TLSv1.1 TLSv1.2;

##############################
nginx_enable: true

# Install NGINX and NGINX modules.
# Variables for these options can be found below.
# Default is true.
nginx_install: true

# Start NGINX service.
# Default is true.
nginx_start: true

# Print NGINX configuration file to terminal after executing playbook.
nginx_debug_output: false

# Specify which type of NGINX you want to install.
# Options are 'opensource' or 'plus'.
# Default is 'opensource'.
nginx_type: opensource

nginx_install_from: nginx_repository
nginx_branch: stable
nginx_install_source_build_tools: true
nginx_install_source_pcre: true
nginx_install_source_openssl: true
nginx_install_source_zlib: true



##############################
nginx_config_http_template_enable: true
nginx_config_http_template:
  default:
    template_file: http/default.conf.j2
    conf_file_name: server1.default.conf
    conf_file_location: /etc/nginx/conf.d/
    servers:
      server1:
        listen:
          listen_localhost:
            port: 80
            ssl: false
        server_name: test.devopspro24.com
        include_files: []
        http_error_pages: {}
        error_page: /usr/share/nginx/html
        access_log:
          - name: main
            location: "/var/log/nginx/{{ server_name }}.access.log"
        error_log:
          location: "/var/log/nginx/{{ server_name }}error.log"
          level: warn
        root: /usr/share/nginx/html
        autoindex: false
        try_files: $uri $uri/index.html $uri.html =404
        client_max_body_size: 25m
        proxy_hide_headers: []  # A list of headers which shouldn't be passed to the application
        add_headers: []

        sub_filter:
          # sub_filters: []
          last_modified: false
          once: true
          types: "text/html"
        # custom_options: []
        web_server:
          locations:
            default:
              location: /static/
              html_file_location: /home/devopspro24/app/src/static/
          http_demo_conf: false
        reverse_proxy:
          locations:
            backend:
              location: /
              proxy_connect_timeout: null
              proxy_pass: http://python-backend
              # rewrites:
              #   - /foo(.*) /$1 break
              # proxy_pass_request_body: off
              # allows:
              #   - 192.168.1.0/24
              # denies:
              #   - all
              proxy_set_header:
                header_host:
                  name: Host
                  value: $host
                header_x_real_ip:
                  name: X-Real-IP
                  value: $remote_addr
                header_x_forwarded_for:
                  name: X-Forwarded-For
                  value: $proxy_add_x_forwarded_for
                header_x_forwarded_host:
                  name: X-Forwarded-Host
                  value: $http_host
                header_x_forwarded_proto:
                  name: X-Forwarded-Proto
                  value: $scheme
          health_check_plus: false
    upstreams:
      upstream1:
        name: python-backend
        lb_method: least_conn
        zone_name: backend_mem_zone
        zone_size: 64k
        sticky_cookie: false
        servers:
          server1:
            address: localhost
            port: 8000
            weight: 1
            health_check: max_fails=1 fail_timeout=10s
